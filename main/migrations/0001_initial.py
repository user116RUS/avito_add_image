# Generated by Django 5.2 on 2025-05-18 20:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название организации')),
                ('xml_link', models.URLField(verbose_name='Ссылка на XML-файл')),
                ('local_xml_file', models.FileField(blank=True, null=True, upload_to='xml_files/', verbose_name='Локальный XML-файл')),
                ('output_excel_file', models.FileField(blank=True, null=True, upload_to='excel_files/', verbose_name='Выходной Excel-файл')),
                ('max_items', models.IntegerField(default=99999, verbose_name='Максимальное количество товаров')),
                ('images_folder_name', models.CharField(max_length=255, verbose_name='Название папки для изображений')),
                ('text_description', models.TextField(blank=True, null=True, verbose_name='Какой текст добавим в описание?')),
                ('where_add_text', models.TextField(help_text='Укажите маркер, после которого будет вставлен текст (например, "Lada;")', verbose_name='Где добавим текст?')),
                ('new_description', models.TextField(verbose_name='Новое описание')),
                ('overlay_images', models.JSONField(help_text='Список путей к изображениям, которые будут накладываться', verbose_name='Изображения для наложения')),
                ('watermark_path', models.FileField(upload_to='watermark_files/', verbose_name='Путь к водяному знаку')),
                ('shop_images', models.JSONField(help_text='Список путей к изображениям магазина', verbose_name='Изображения магазина')),
                ('gdrive_images_folder_id', models.CharField(blank=True, help_text='ID папки на Google Drive, куда будут сохраняться обработанные изображения', max_length=255, null=True, verbose_name='ID папки на Google Drive для изображений')),
                ('gdrive_output_file_id', models.CharField(blank=True, help_text='ID Excel-файла на Google Drive с обработанными данными', max_length=255, null=True, verbose_name='ID файла Excel на Google Drive')),
                ('gdrive_output_file_url', models.URLField(blank=True, help_text='Полная ссылка на документ Excel на Google Drive', null=True, verbose_name='URL к файлу Excel на Google Drive')),
                ('google_credentials_file', models.FileField(blank=True, help_text='Файл JSON с учетными данными сервисного аккаунта Google', null=True, upload_to='google_creds/', verbose_name='Файл авторизации Google')),
                ('is_active', models.BooleanField(default=True, help_text='Включить/выключить обработку данной организации', verbose_name='Активна')),
                ('processing_interval', models.IntegerField(default=5, help_text='Как часто обрабатывать данные этой организации', verbose_name='Интервал обработки (минуты)')),
                ('last_processed', models.DateTimeField(blank=True, null=True, verbose_name='Последняя обработка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Время начала')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Время окончания')),
                ('status', models.CharField(choices=[('in_progress', 'В процессе'), ('completed', 'Завершено'), ('failed', 'Ошибка')], default='in_progress', max_length=20, verbose_name='Статус')),
                ('items_processed', models.IntegerField(default=0, verbose_name='Обработано товаров')),
                ('items_added', models.IntegerField(default=0, verbose_name='Добавлено новых товаров')),
                ('items_updated', models.IntegerField(default=0, verbose_name='Обновлено товаров')),
                ('items_with_errors', models.IntegerField(default=0, verbose_name='Товары с ошибками')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Сообщение об ошибке')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='main.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Журнал обработки',
                'verbose_name_plural': 'Журналы обработки',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ProductItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(help_text='ID товара из XML-файла', max_length=255, verbose_name='Внешний ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Цена')),
                ('category', models.CharField(blank=True, max_length=255, null=True, verbose_name='Категория')),
                ('image_urls', models.JSONField(blank=True, help_text='Список URL обработанных изображений', null=True, verbose_name='URL изображений')),
                ('additional_data', models.JSONField(blank=True, help_text='Дополнительные поля товара из XML', null=True, verbose_name='Дополнительные данные')),
                ('is_processed', models.BooleanField(default=True, verbose_name='Обработан')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='main.organization', verbose_name='Организация')),
                ('processing_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='main.processinglog', verbose_name='Журнал обработки')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-updated_at'],
                'indexes': [models.Index(fields=['organization', 'external_id'], name='main_produc_organiz_411e21_idx'), models.Index(fields=['is_active'], name='main_produc_is_acti_98b53a_idx')],
                'unique_together': {('organization', 'external_id')},
            },
        ),
    ]
